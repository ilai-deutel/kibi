name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          # Linux
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: ubuntu-latest
            target: i686-unknown-linux-gnu

          # MacOS
          - os: macos-latest
            target: x86_64-apple-darwin

          # Windows
          - os: windows-latest
            target: x86_64-pc-windows-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: i686-pc-windows-msvc

          # MSRV (Linux)
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolchain: 1.50.0
          # MSRV (Windows)
          - os: windows-latest
            target: x86_64-pc-windows-gnu
            toolchain: 1.50.0

    env:
      RUSTFLAGS: -D warnings

    steps:
      - uses: actions/checkout@v2
      - name: Install gcc-multilib
        if: matrix.target == 'i686-unknown-linux-gnu'
        run: sudo apt-get install gcc-multilib
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain || 'stable' }}
          target: ${{ matrix.target }}
          override: true
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --target ${{ matrix.target }}
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --target ${{ matrix.target }}

  wasi:
    name: wasi
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true    
      - name: Install WASI
        run: cargo install cargo-wasi    
      - name: Run build on wasm32-wasi
        run: |
          cargo wasi build

  static_checks:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Install nightly with clippy and rustfmt
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt, clippy
      - name: Run rustfmt check
        run: cargo +nightly fmt -- --check
      - name: Run Clippy
        uses: actions-rs/clippy-check@v1
        with:
          toolchain: nightly
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --all-targets -- -D warnings
