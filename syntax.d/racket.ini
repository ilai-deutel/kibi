name=Racket
extensions=rkt, rac
highlight_numbers=true
singleline_string_quotes='
singleline_comment_start=;
multiline_comment_delims=#|, |#
; https://docs.racket-lang.org/reference/index.html
keywords_1=define, define-syntax, define-struct, #%app, case-lambda, case-lambda*, cond-expand, let, let*, letrec, letrec*, do, do*, quasiquote, unquote, unquote-splicing, for/list, for/hash, for/hasheq, for/and, for/or, for*/list, for*/hash, for*/hasheq, for*/and, for*/or, syntax-rules, syntax-id-rules, lambda, begin, set!, let-values, let*-values, letrec-values, define-values, values, call-with-current-continuation, call/cc, dynamic-wind, parameterize, with-handlers, with-continuation-mark, provide, require, module, #%module-begin, #%plain-module-begin, #%declare, #%top, #%top-interaction, #%expression, #%require, #%provide
; https://docs.racket-lang.org/reference/index.html
keywords_2=else, =>, ->, cond, and, or, not, null?, cons, car, cdr, list, list*, vector, vector*, map, for-each, apply, foldl, foldr, filter, remove, member, assq, assv, assoc,
